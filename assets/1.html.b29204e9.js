import{_ as e,r as t,o as p,c as o,a as n,d as c,b as s,e as l}from"./app.83520533.js";const i={},u=n("h1",{id:"\u7F3A\u5931\u7684\u7B2C\u4E00\u4E2A\u6B63\u6570",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u7F3A\u5931\u7684\u7B2C\u4E00\u4E2A\u6B63\u6570","aria-hidden":"true"},"#"),s(" \u7F3A\u5931\u7684\u7B2C\u4E00\u4E2A\u6B63\u6570")],-1),r={href:"https://leetcode.cn/leetbook/read/top-interview-questions-hard/xwkftg/",target:"_blank",rel:"noopener noreferrer"},k=s("\u9898\u76EE"),d=l(`<p>\u89E3\u9898\u601D\u8DEF</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">nums</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">firstMissingPositive</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6570\u7EC4\u4E2D\uFF0C\u5C0F\u4E8E\u7B49\u4E8E0 \u6216\u8005 \u5927\u4E8E nums.length \u7684 \u5143\u7D20\u503C \u90FD\u4E0D\u4F1A\u5F71\u54CD \u6C42\u6B63\u6574\u6570count</span>
    <span class="token comment">// \u904D\u5386\u6570\u7EC4\uFF0C\u5C06 \u5143\u7D20 \u5B58\u5728 map \u4E2D</span>
    <span class="token comment">// \u521D\u59CB\u5316count = 0\uFF0C\u7136\u540E\u5FAA\u73AF coun + 1\uFF0C\u5E76\u4E14\u6BCF\u6B21\u67E5\u8BE2 count + 1\u7684\u503C\u662F\u5426\u5728map\u4E2D\uFF0C\u5982\u679C\u5B58\u5728\uFF0C\u5219\u7EE7\u7EEDcount + 1\uFF0C\u76F4\u5230\u67D0\u4E2Acount+1 \u4E0D\u5728map \u4E2D\uFF0C\u600E return count + 1;</span>
    <span class="token comment">// \u65F6\u95F4\u662F O(n)\uFF0C\u7A7A\u95F4\u662FO(n)</span>
    <span class="token comment">// \u5229\u7528\u6570\u7EC4nums \u6765\u4F5C\u4E3A map,\u5219 nums\u7684index\u8868\u793A\u7684\u662F nums \u4E2D\u5927\u4E8E0\uFF0C\u5C0F\u4E8E\u7B49\u4E8Enums.length \u7684\u5143\u7D20\uFF0C\u5219index\u6240\u5BF9\u5E94\u7684value \u6807\u8BB0\u4E3A \u8D1F\uFF0C\u8868\u793A\u6539index+1 \u5B58\u5728\u6570\u7EC4\u5143\u7D20\u4E2D\u3002</span>
    <span class="token comment">// \u8FD9\u91CC\u6CE8\u610F\uFF0C\u6570\u7EC4\u5143\u7D20\u5B58\u5728 \u8D1F\u5143\u7D20\uFF0C\u4E5F\u5B58\u5728\u5F88\u591A\u5927\u4E8E0\uFF0C\u5C0F\u4E8E\u7B49\u4E8Enums.length \u7684\u5143\u7D20</span>
        <span class="token comment">// \u5C0F\u4E8E\u7B49\u4E8E0\u7684\u6570\uFF0C\u5BF9count \u4E0D\u5F71\u54CD\uFF0C\u6240\u4EE5\u5C06\u5143\u7D20\u90FD\u8F6C\u4E3A\u5927\u4E8E nums.length \u7684\u5143\u7D20\u5373\u53EF\uFF0C\u6BD4\u5982 nums.length + 1</span>
        <span class="token comment">// \u5927\u4E8E0\uFF0C\u5C0F\u4E8E\u7B49\u4E8Enums.length \u7684\u6570\uFF0C\u5BF9\u5E94\u7684 index\u88AB\u6807\u8BB0\u4E3A\u8D1F\u65F6\uFF0Cindex \u4E0A\u7684\u5143\u7D20\u53EF\u80FD\u4E5F\u6709\u5BF9\u5E94\u7684index \u9700\u8981\u6807\u8BB0\u4E3A\u8D1F\uFF0C\u6240\u4EE5\u8FD9\u65F6\u5019\u904D\u5386\u65F6\uFF0C\u9700\u8981\u5C06value\u53D6\u7EDD\u5BF9\u503C\uFF0C\u8FD9\u6837\u5C31\u80FD\u591F\u6B63\u786E\u6807\u8BB0\u6240\u6709\u7684map\u4E86\uFF0C\u4E0D\u4F1A\u9057\u6F0F\u3002</span>
    <span class="token comment">// \u7136\u540E\u904D\u5386\u6570\u7EC4\uFF0C\u627E\u5230\u7B2C\u4E00\u4E2A value &gt; 0 \u7684 index ,  \u56E0\u4E3A\u6211\u4EEC\u662F\u91C7\u7528 index: 0 \u6620\u5C04 count: 1, index: 1 \u6620\u5C04 count: 2\u7684\uFF0C\u6240\u4EE5 index + 1\u5C31\u662F\u6211\u4EEC\u9700\u8981\u7684count\uFF0Creturn index + 1;</span>

    <span class="token keyword">const</span> n <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token comment">// \u5148\u5C06\u5143\u7D20\u7684\u8D1F\u5143\u7D20\u8F6C\u4E3A\u5927\u4E8E n\u7684\u6570</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// \u56E0\u4E3A n + 1 \u4E0D\u5B58\u5728 nums index\uFF0Cindex\u7684\u6700\u5927\u503C\u662F n - 1\uFF0C \u6240\u4EE5\u4E0D\u4F1A\u88AB\u6807\u8BB0</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u6807\u8BB0\u5927\u4E8E0\u5C0F\u4E8E\u7B49\u4E8En\u7684\u5143\u7D20\uFF0C\u5C06nums\u5BF9\u5E94\u7684\u4E0B\u6807\u7684value \u53D8\u4E3A\u8D1F\u6570\uFF0C\u4EE5\u8868\u793A \u67D0\u4E2A 0&lt; x &lt;=n \u7684\u503Cx \u5B58\u5728\uFF0C\u5E76\u4E14 map \u7531\u4E8E\u6570\u7EC4\u7684\u7279\u6027\uFF0C\u5929\u7136\u6309\u7167\u987A\u5E8F\u6392\u653E\u3002</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> n<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">const</span> index <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u53D6\u7EDD\u5BF9\u503C\uFF0C\u56E0\u4E3A\u8BE5\u5143\u7D20\u7684value \u5728\u4E4B\u524D\u53EF\u80FD\u88AB\u5176\u4ED6\u5143\u7D20\u5F53\u505Amap\u6807\u8BB0\u8FC7\u4E86\u3002</span>
            nums<span class="token punctuation">[</span>index <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span>Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>index <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// index - 1 \u5C31\u662F \u4F7F\u7528 nums \u7684 \u4E0B\u6807 0\u6765\u8868\u793Amap \u7684 key 1\uFF0C nums \u7684 \u4E0B\u6807 1\u6765\u8868\u793Amap \u7684 key 2\uFF0C\u4EE5\u6B64\u7C7B\u63A8\u3002\u540C\u65F6 \u5BF9\u5143\u7D20\u8FDB\u884C\u6807\u8BB0\u4E3A\u8D1F\u65F6\uFF0C\u9700\u8981\u53D6\u7EDD\u5BF9\u503C\uFF0C\u7136\u540E\u518D\u8D1F\u5316\uFF0C\u4E3B\u8981\u662F\u6709\u53EF\u80FDnums\u4E2D\u53EF\u80FD\u6709\u4E24\u4E2A\u76F8\u540C\u7684\u5143\u7D20\uFF0C\u9632\u6B62\u8FC7\u53BB\u5DF2\u7ECF\u5C06\u5143\u7D20\u6807\u8BB0\u4E3A\u8D1F\u4E86\uFF0C\u518D\u6807\u8BB0\u65F6\u5C31\u8D1F\u8D1F\u5F97\u6B63\u3002</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u627E\u51FA\u7B2C\u4E00\u4E2Avalue \u4E0D\u4E3A\u8D1F\u7684\u503C\uFF0C\u8868\u793A\u8FD9\u4E2Avalue\u7684\u4E0B\u6807\u662F\u6CA1\u6709\u6807\u8BB0\u5728map\u4E2D\u7684\uFF0C\u6240\u4EE5\u8FD9\u4E2A\u4E0B\u6807+1\u5C31\u662F\u6211\u4EEC\u60F3\u8981\u7684\u503C\uFF0C\u5982\u679C\u8FD9\u4E2A\u6570\u7EC4\u90FD\u627E\u4E0D\u5230\uFF0C\u5219\u9ED8\u8BA4\u8FD4\u56DE n + 1\u3002\u56E0\u4E3A\u5728\u6781\u7AEF\u60C5\u51B5\u662F nums\u7684\u5143\u7D20\u5C31\u662F\u4ECE1\u5F00\u59CB\u6B65\u957F\u4E3A1\u9012\u589E\u7684\u6570\u7EC4\u3002</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> 
    <span class="token comment">// \u9ED8\u8BA4\u8FD4\u56DE n + 1</span>
    <span class="token keyword">return</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function m(v,b){const a=t("ExternalLinkIcon");return p(),o("div",null,[u,n("p",null,[n("a",r,[k,c(a)])]),d])}var h=e(i,[["render",m],["__file","1.html.vue"]]);export{h as default};
