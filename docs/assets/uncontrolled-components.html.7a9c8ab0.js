import{_ as o,r as c,o as u,c as l,a as s,e as t,w as e,b as n,d as p}from"./app.b2402127.js";const i={},r=s("h1",{id:"\u975E\u53D7\u63A7\u7EC4\u4EF6-react",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u975E\u53D7\u63A7\u7EC4\u4EF6-react","aria-hidden":"true"},"#"),n(" \u975E\u53D7\u63A7\u7EC4\u4EF6 react")],-1),k=n("react "),d=n("\u975E\u53D7\u63A7\u7EC4\u4EF6"),v=n("\uFF0C\u610F\u601D\u5C31\u662F \u7EC4\u4EF6\u7684value\u503C\u4E0D\u53D7\u5F00\u53D1\u8005\u63A7\u5236\u3002"),f=s("h2",{id:"\u975E\u53D7\u63A7\u7EC4\u4EF6\u5B9E\u73B0",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u975E\u53D7\u63A7\u7EC4\u4EF6\u5B9E\u73B0","aria-hidden":"true"},"#"),n(" \u975E\u53D7\u63A7\u7EC4\u4EF6\u5B9E\u73B0")],-1),m=n("\u975E\u53D7\u63A7\u7EC4\u4EF6\u9700\u8981\u501F\u52A9"),h=n("input"),_=n("\u624D\u53EF\u4EE5\u5B9E\u73B0\u3002"),b=n("\u975E\u53D7\u63A7\u7EC4\u4EF6\u662F\u5728\u7EC4\u4EF6"),g=n("\u5185\u90E8"),w=n("\u5C01\u88C5\u7EF4\u62A4\u4E86\u81EA\u5DF1\u7684"),y=n("state"),R=n("\uFF0C\u5E76\u4E14state "),V=n("\u4E0D\u5BF9\u5916\u66B4\u9732"),x=n("\uFF0C\u5373"),I=n("\u65E0\u6CD5"),C=n("\u901A\u8FC7\u4F20\u5165 onchange \u7B49\u51FD\u6570\u5C06value\u503C\u4F20\u51FA\u6765\u3002"),j=n("\u53EA\u80FD\u901A\u8FC7 React.createRef() "),N=n("\u83B7\u53D6 input\u7684ref \u7136\u540E \u901A\u8FC7 ref.current.value \u6216\u8005 ref.current.defaultValue \u4E24\u4E2A\u5C5E\u6027\u83B7\u5F97\u503C\u3002"),S=p(`<h3 id="\u975E\u53D7\u63A7\u7EC4\u4EF6\u5C01\u88C5\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u975E\u53D7\u63A7\u7EC4\u4EF6\u5C01\u88C5\u793A\u4F8B" aria-hidden="true">#</a> \u975E\u53D7\u63A7\u7EC4\u4EF6\u5C01\u88C5\u793A\u4F8B</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span>  useState<span class="token punctuation">,</span> forwardRef <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> Input <span class="token operator">=</span> <span class="token function">forwardRef</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> ref</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span>defaultValue<span class="token punctuation">}</span> <span class="token operator">=</span> props
  <span class="token keyword">return</span> <span class="token operator">&lt;</span>input ref<span class="token operator">=</span><span class="token punctuation">{</span>ref<span class="token punctuation">}</span> defaultValue<span class="token operator">=</span><span class="token punctuation">{</span>defaultValue<span class="token punctuation">}</span><span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> NumberInput <span class="token operator">=</span> <span class="token function">forwardRef</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> ref</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span>defaultValue<span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token punctuation">[</span>value<span class="token punctuation">,</span> setValue<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>defaultValue<span class="token punctuation">)</span>

  <span class="token keyword">const</span> <span class="token function-variable function">changeHanle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token function">setValue</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token operator">&lt;</span>input ref<span class="token operator">=</span><span class="token punctuation">{</span>ref<span class="token punctuation">}</span> defaultValue<span class="token operator">=</span><span class="token punctuation">{</span>value<span class="token punctuation">}</span> onChange<span class="token operator">=</span><span class="token punctuation">{</span>changeHanle<span class="token punctuation">}</span><span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u975E\u53D7\u63A7\u7EC4\u4EF6\u4F7F\u7528\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u975E\u53D7\u63A7\u7EC4\u4EF6\u4F7F\u7528\u793A\u4F8B" aria-hidden="true">#</a> \u975E\u53D7\u63A7\u7EC4\u4EF6\u4F7F\u7528\u793A\u4F8B</h3><p>\u5982\u4E0A\u6709\u4E24\u4E2A\u5C01\u88C5\u597D\u7684\u975E\u53D7\u63A7\u7EC4\u4EF6\uFF0C\u4F7F\u7528\u5982\u4E0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">render</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> inputRef <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> numberInputRef <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token comment">// \u53EA\u80FD\u901A\u8FC7\u8FD9\u79CD\u65B9\u5F0F\u83B7\u5F97\u503C\uFF0C \u65E0\u6CD5\u901A\u8FC7\u4F20\u5165onchange \u6765\u63A7\u5236 input\u7684\u884C\u4E3A\uFF0C\u5982 value -1\u3002</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>inputRef<span class="token punctuation">.</span>current<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token comment">// \u83B7\u5F97\u7684\u503C\u6C38\u8FDC+1\uFF0C\u65E0\u6CD5\u6539\u53D8\u8FD9\u4E2A\u884C\u4E3A\u3002</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>numberInputRef<span class="token punctuation">.</span>current<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> 
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>Input ref<span class="token operator">=</span><span class="token punctuation">{</span>inputRef<span class="token punctuation">}</span> defaultValue<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token operator">/</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>NumberInput ref<span class="token operator">=</span><span class="token punctuation">{</span>numberInputRef<span class="token punctuation">}</span> defaultValue<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),B=n("input \u8F93\u5165\u662F\u4EC0\u4E48\uFF0C\u5F97\u5230\u7684\u5C31\u662F\u4EC0\u4E48\uFF0C\u884C\u4E3A"),T=n("\u4E0D\u53D7\u5F00\u53D1\u8005\u63A7\u5236"),E=n("\uFF08\u65E0\u6CD5\u901A\u8FC7onChange\uFF0ConInput \u7B49\u4E8B\u4EF6\u6539\u53D8Input \u7684\u503C\uFF09\u3002"),H=s("li",null,"defaultValue \u662F\u8BBE\u7F6Einput\u7684\u9ED8\u8BA4\u503C\u3002",-1),q=s("h2",{id:"react-\u53D7\u63A7\u7EC4\u4EF6",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#react-\u53D7\u63A7\u7EC4\u4EF6","aria-hidden":"true"},"#"),n(" react \u53D7\u63A7\u7EC4\u4EF6")],-1),z=n("\u53D7\u63A7\u7EC4\u4EF6"),A=p(`\u5219\u662F\u6211\u4EEC\u901A\u5E38\u4F7F\u7528\u7684\uFF0C\u4F20\u5165 value \u548C onchange \u4E24\u4E2A\u5C5E\u6027\uFF0C\u7136\u540E\u901A\u8FC7 onChange \u6539\u53D8 input \u81EA\u8EAB\u884C\u4E3A\u7684\u7EC4\u4EF6\u3002\u5185\u90E8\u4E0D\u7EF4\u62A4 state\u3002 <h3 id="\u53D7\u63A7\u7EC4\u4EF6\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u53D7\u63A7\u7EC4\u4EF6\u793A\u4F8B" aria-hidden="true">#</a> \u53D7\u63A7\u7EC4\u4EF6\u793A\u4F8B</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span>  useState<span class="token punctuation">,</span> forwardRef <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> Input <span class="token operator">=</span> <span class="token function">forwardRef</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> ref</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span>value<span class="token punctuation">,</span> onChange<span class="token punctuation">}</span> <span class="token operator">=</span> props
  <span class="token keyword">return</span> <span class="token operator">&lt;</span>input value<span class="token operator">=</span><span class="token punctuation">{</span>value<span class="token punctuation">}</span> onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token function">onChange</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F00\u53D1\u8005\u901A\u8FC7 onChange \u51FD\u6570 \u53EF\u4EE5\u63A7\u5236Input \u7EC4\u4EF6\u5F97\u5230\u7684\u503C\u3002</p>`,4);function D(F,G){const a=c("Te");return u(),l("div",null,[r,s("p",null,[k,t(a,{d:""},{default:e(()=>[d]),_:1}),v]),f,s("p",null,[m,t(a,{d:""},{default:e(()=>[h]),_:1}),_]),s("p",null,[b,t(a,{d:""},{default:e(()=>[g]),_:1}),w,t(a,{d:""},{default:e(()=>[y]),_:1}),R,t(a,{d:""},{default:e(()=>[V]),_:1}),x,t(a,{d:""},{default:e(()=>[I]),_:1}),C,t(a,{d:""},{default:e(()=>[j]),_:1}),N]),S,s("ul",null,[s("li",null,[B,t(a,{d:""},{default:e(()=>[T]),_:1}),E]),H]),q,t(a,{s:""},{default:e(()=>[z]),_:1}),A])}var K=o(i,[["render",D],["__file","uncontrolled-components.html.vue"]]);export{K as default};
